{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielabarbosa/Documents/GitHub/moveit/src/components/Countown.tsx\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"../styles/components/Countdown.module.css\";\nexport default function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  useEffect(() => {\n    if (active && time > 0) {\n      setTimeout(() => setTime(time - 1), 1000);\n    }\n  }, [active, time]);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minutesLeft, minutesRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondsLeft, secondsRight] = String(seconds).padStart(2, \"0\").split(\"\");\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minutesLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minutesRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um cliclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/danielabarbosa/Documents/GitHub/moveit/src/components/Countown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","active","setActive","setTimeout","minutes","Math","floor","seconds","minutesLeft","minutesRight","String","padStart","split","secondsLeft","secondsRight","startCountdown","countdownContainer","countdownButton"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,KAAK,EAAN,CAAhC;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,MAAM,IAAIF,IAAI,GAAG,CAArB,EAAwB;AACtBI,MAAAA,UAAU,CAAC,MAAMH,OAAO,CAACD,IAAI,GAAG,CAAR,CAAd,EAA0B,IAA1B,CAAV;AACD;AACF,GAJQ,EAIN,CAACE,MAAD,EAASF,IAAT,CAJM,CAAT;AAMA,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWP,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMQ,OAAO,GAAGR,IAAI,GAAG,EAAvB;AAEA,QAAM,CAACS,WAAD,EAAcC,YAAd,IAA8BC,MAAM,CAACN,OAAD,CAAN,CACjCO,QADiC,CACxB,CADwB,EACrB,GADqB,EAEjCC,KAFiC,CAE3B,EAF2B,CAApC;AAGA,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BJ,MAAM,CAACH,OAAD,CAAN,CACjCI,QADiC,CACxB,CADwB,EACrB,GADqB,EAEjCC,KAFiC,CAE3B,EAF2B,CAApC;;AAIA,WAASG,cAAT,GAA0B;AACxBb,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACmB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOR;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEjB,MAAM,CAACoB,eAFpB;AAGE,MAAA,OAAO,EAAEF,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAsBD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport styles from \"../styles/components/Countdown.module.css\";\n\nexport default function Countdown() {\n  const [time, setTime] = useState(25 * 60);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (active && time > 0) {\n      setTimeout(() => setTime(time - 1), 1000);\n    }\n  }, [active, time]);\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n\n  const [minutesLeft, minutesRight] = String(minutes)\n    .padStart(2, \"0\")\n    .split(\"\");\n  const [secondsLeft, secondsRight] = String(seconds)\n    .padStart(2, \"0\")\n    .split(\"\");\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  return (\n    <>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span>{minutesLeft}</span>\n          <span>{minutesRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondsLeft}</span>\n          <span>{secondsRight}</span>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        className={styles.countdownButton}\n        onClick={startCountdown}\n      >\n        Iniciar um cliclo\n      </button>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}